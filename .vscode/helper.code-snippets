{
	// Place your LLM_Agents workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"load .env file using dotenv":{
		"scope":"jupyter, python", 
		"prefix":"load_env_var", 
		"body":[
			"%load_ext dotenv",
			"%dotenv ../.env"
		],
		"description": "load .env file using dotenv"
	},
	"load docs to vector database":{
		"scope":"jupyter, python", 
		"prefix": " load_docs_to_vdb",
		"body":[
			"dir_path = NONE",
			"INDEX_PATH = NONE",
			"file_loader = NONE",
			"text_splitter = NONE",
			"if(not os.path.exists(INDEX_PATH)):",
			"\tdocs = []",
			"\tfor f in os.listdir(PATH_TO_PDFS):",
			"\tdir_path = os.path.join(PATH_TO_PDFS, f)",
			"\tif os.path.isfile(dir_path):",
			"\t\t\tloader = file_loader(dir_path)",
			"\tdocs.extend(loader.load())",

			"\tsplits = text_splitter.split_documents(docs)",

			"\tvectorstore = FAISS.from_documents(splits, embedding_model)",
			"\tvectorstore.save_local(INDEX_PATH)",
			"else:",
			"\tvectorstore = FAISS.load_local(INDEX_PATH, embedding_model, allow_dangerous_deserialization=True)",
		]

	}
}